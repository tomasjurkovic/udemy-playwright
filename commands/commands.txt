options to run test from terminal

npx run playwright - runs all tests without opening browser (defaulty in chrome)
npx run playwright --headed - runs all tests with opening browser (defaulty chrome)

npx run playwright --browser=firefox - runs all tests without opening browser in firefox
npx run playwright --headed --browser=firefox - runs all tests with opening browser in firefox

npx run playwright --browser=all - runs all tests without opening browser in firefox, chrome and chromium
npx run playwright --headed --browser=all - runs all tests with opening browser in firefox, chrome and chromium 

npx playwright test --grep @myFirstTag - runs only those test which has tag @myFirstTag
npx playwright test --grep-invert  @myFirstTag - runs only those test which has not got tag @myFirstTag

npx playwright test --config=playwright.config.ts --project=Webkit - runs all test using config which was defined in mentioned file

types of reports:
npx playwright test --config=playwright.config.ts --project=Chromium
and then one of these:
--reporter=list - default one, that playwright uses
--reporter=dot - only green/red dots
--reporter=dot - only data in one row are reported, not very useful
--reporter=junit - it will create xml format, which can be extracted or used in monitoring services
--reporter=html = it exports html report, which is clicable and gives most details, good one for debugging

run visual tests:
npx playwright test --config=visual.config.ts --project=webkit - runs tests in visual folder
// or we can use firefox/chromium as well
npx playwright test --config=visual.config.ts --project=webkit --update-snapshots

open playwright:
npx playwright open - opens empty browser
npx playwright open --device="iPhone 11" wikipedia.org - opens iPhone 11 simalated browser and navigates to the wikipedia website as selected

we can use playwright to convert web pages to PDF files:
npx playwright pdf https://www.example.com my-file.pdf - it navigates to selected page and convert it to the pdf file with selected name


